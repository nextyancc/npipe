syntax = "proto3";
package PB.Generic;

//通用成功
message Success{
  enum MsgId { None=0; Id = 150001; }
}

//通用返回失败
message Fail{
  enum MsgId {  None=0;Id = 150002; }
  int32 number=1;
  string message=2;
}

//通用错误返回
message Error{
  enum MsgId {  None=0;Id = 150003; }
  int32 number=1;
  string message=2;
}

//通用错误码
enum ErrorCode {
	None = 0;
	// 服务器内部错误
	InternalError = -1000;
	// 请求协议Id不存在
	InterfaceAbsent = -1001;
	// 玩家未登录
	PlayerNotLogin = -1002;
}


// ping
message Ping {
  enum MsgId {None = 0; Id = 150004;}
  int64 ticks = 1;
}

// pong
message Pong {
  enum MsgId {None = 0; Id = 150005;}
  int64 ticks = 1;
}

// 向输出端请求发起连接
message I2oConnect {
  enum MsgId {None = 0; Id = 150006;}
  // 通道id
  uint32 tunnel_id = 1;
  // 会话id
  uint32 session_id = 2;
  // 通道类型
  uint32  tunnel_type = 3;
  // 是否是TCP
  bool is_tcp = 4;
  // 是否压缩数据
  bool is_compressed = 5;
  // 目标地址
  string addr = 6;
  // 加密方式
  string encryption_method = 7;
  // 加密key
  string encryption_key = 8;
  // 客户端地址
  string client_addr = 9;
}

// 连接结果
message O2iConnect {
  enum MsgId {None = 0; Id = 150007;}
  // 通道id
  uint32 tunnel_id = 1;
  // 会话id
  uint32 session_id = 2;
  // 是否是成功
  bool success = 3;
  // 错误信息
  string error_info = 4;
}

// 输出端收到数据返回给输入端
message I2oSendData {
  enum MsgId {None = 0; Id = 150008;}
  // 通道id
  uint32 tunnel_id = 1;
  // 会话id
  uint32 session_id = 2;
  // 数据
  bytes data = 3;
}

// 输出端收到数据返回给输入端
message O2iRecvData {
  enum MsgId {None = 0; Id = 150009;}
  // 通道id
  uint32 tunnel_id = 1;
  // 会话id
  uint32 session_id = 2;
  // 数据
  bytes data = 3;
}

// 断开连接
message I2oDisconnect {
  enum MsgId {None = 0; Id = 150010;}
  // 通道id
  uint32 tunnel_id = 1;
  // 会话id
  uint32 session_id = 2;
}

// 断开连接
message O2iDisconnect {
  enum MsgId {None = 0; Id = 150011;}
  // 通道id
  uint32 tunnel_id = 1;
  // 会话id
  uint32 session_id = 2;
}

// 发送结果
message O2iSendDataResult {
  enum MsgId {None = 0; Id = 150012;}
  // 通道id
  uint32 tunnel_id = 1;
  // 会话id
  uint32 session_id = 2;
  // 完成长度
  uint32 data_len = 3;
}

// 接收数据处理结果
message I2oRecvDataResult {
  enum MsgId {None = 0; Id = 150013;}
  // 通道id
  uint32 tunnel_id = 1;
  // 会话id
  uint32 session_id = 2;
  // 完成长度
  uint32 data_len = 3;
}


// 输出端收到数据返回给输入端
message I2oSendToData {
  enum MsgId {None = 0; Id = 150014;}
  // 通道id
  uint32 tunnel_id = 1;
  // 会话id
  uint32 session_id = 2;
  // 数据
  bytes data = 3;
  // 目标地址
  string target_addr = 4;
}

// 输出端收到数据返回给输入端
message O2iRecvDataFrom {
  enum MsgId {None = 0; Id = 150015;}
  // 通道id
  uint32 tunnel_id = 1;
  // 会话id
  uint32 session_id = 2;
  // 数据
  bytes data = 3;
  // 远程地址
  string remote_addr = 4;
}